Aggregator

[
    {
        $match: {
            isActive:true
        }
    },

    $count :
]



## Aggregation Operators:

  Note :  $push: operator to push into Array
          $count: "newFieldName" this newFied will have count value
          $all: check this when need its like [].contains() in dart


db.sales.aggregate([
  {
    $group: {
      _id: "$category",
      totalSales: { $sum: "$amount" },
      averageSales: { $avg: "$amount" },
      minSale: { $min: "$amount" },
      maxSale: { $max: "$amount" },
      firstSale: { $first: "$amount" },
      lastSale: { $last: "$amount" }
    }
  }
])


Explanation

    _id: "$category": Groups the documents by the category field.
    totalSales: Calculates the sum of the amount for each category.
    averageSales: Computes the average amount for each category.
    minSale: Finds the minimum amount in each category.
    maxSale: Finds the maximum amount in each category.
    firstSale: Retrieves the amount of the first document encountered in the group (based on the natural order of documents).
    lastSale: Retrieves the amount of the last document encountered in the group.


Count and sorting and limit to 5 in Group:

[{
    $group:{
        _id: "$favouriteFruit",
        count: {
            "$sum": 1 // this will add 1 whenever it find favourite fruits
        },
    },

    $sort:{
      count: -1  // descending order //1  ascending order 
    },
 


    $limit: 5
    


}]


// for sorting on multiple variables
db.sales.aggregate([
  { $sort: { date: 0, amount: 1 } } // Sort by amount in ascending order, ignore date
])




### Group nested 

[
    {
        $group:{
            _id: "$company.location.country",
            userCount:{
                $sum: 1
            }
        },

        $sort:{
            userCount:-1
        },
        $limit:1
    }
]




### aggregation in array
db.orders.aggregate([
  { 
    $unwind: { 
      path: "$items", 
      preserveNullAndEmptyArrays: true, 
      includeArrayIndex: "itemIndex" 
    } 
  }
])

Explanation of Each Parameter

    path: Specifies the field to unwind. In this case, it's "$items".
    preserveNullAndEmptyArrays: If set to true, documents that have null or empty 
                       arrays will still be included in the output.
    includeArrayIndex: This parameter allows you to include the index of the current element 
                       in the unwound array. The index will be stored in a new 
                       field called itemIndex.


#### PASS ONLY FEW FIELD TO NEXT
db.orders.aggregate([
  { $project: { customer: 1, amount: 1 } }
])



Note: get index value of a array
  array.1  here 1 is index (0,1,2....,n)


in field we are not using $ while in value we need $
 example is Group section...








Note: image that is having comparison between simple cmds and Aggregator commands
resource: aggregator_likequeries